name: Android CI Build

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4.2.2

    - name: Setup Java
      uses: actions/setup-java@v4.7.1
      with:
        java-version: 17
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        log-accepted-android-sdk-licenses: false

    - name: List packages
      run: sdkmanager --list

    - name: Build app
      run: ./gradlew --no-daemon assembleDebug -x lint --stacktrace

    - name: Upload APKs
      uses: actions/upload-artifact@v4
      with:
        name: apks
        path: |
          GPSTest/build/outputs/apk/debug/*.apk
          library/build/outputs/apk/debug/*.apk
          wear/build/outputs/apk/debug/*.apk
  
  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [29, 33]
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Download APKs
        uses: actions/download-artifact@v4
        with:
          name: apks
          path: /tmp

      - name: Display structure of downloaded files
        run: ls -R /tmp

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Setup Java
        uses: actions/setup-java@v4.7.1
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3
        
      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: |
            ./gradlew tasks
            adb wait-for-device
            adb install -d /tmp/apks/wear/build/outputs/apk/debug/*.apk